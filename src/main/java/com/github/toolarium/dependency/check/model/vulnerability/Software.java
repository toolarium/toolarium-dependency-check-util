/*
 * Software.java
 *
 * Copyright by toolarium, all rights reserved.
 */
package com.github.toolarium.dependency.check.model.vulnerability;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;


/**
 * Define the software
 * 
 * @author patrick
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({"id", "versionEndExcluding", "vulnerabilityIdMatched" })
public class Software {
    @JsonProperty("id")
    private String id;
    @JsonProperty("versionEndExcluding")
    private String versionEndExcluding;
    @JsonProperty("vulnerabilityIdMatched")
    private String vulnerabilityIdMatched;
    @JsonIgnore
    private Map<String, Object> additionalProperties = new LinkedHashMap<String, Object>();

    
    /**
     * Get the id
     *
     * @return the id
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    
    /**
     * Set the id
     *
     * @param id the id
     */
    @JsonProperty("id")
    public void setId(String id) {
        this.id = id;
    }

    
    /**
     * Get the version end excluding
     *
     * @return the version end excluding
     */
    @JsonProperty("versionEndExcluding")
    public String getVersionEndExcluding() {
        return versionEndExcluding;
    }

    
    /**
     * Set the version end excluding
     *
     * @param versionEndExcluding the version end excluding
     */
    @JsonProperty("versionEndExcluding")
    public void setVersionEndExcluding(String versionEndExcluding) {
        this.versionEndExcluding = versionEndExcluding;
    }

    
    /**
     * Get the vulnerability id matched
     *
     * @return the vulnerability id matched
     */
    @JsonProperty("vulnerabilityIdMatched")
    public String getVulnerabilityIdMatched() {
        return vulnerabilityIdMatched;
    }

    
    /**
     * Set the vulnerability id matched
     *
     * @param vulnerabilityIdMatched the vulnerability id matched
     */
    @JsonProperty("vulnerabilityIdMatched")
    public void setVulnerabilityIdMatched(String vulnerabilityIdMatched) {
        this.vulnerabilityIdMatched = vulnerabilityIdMatched;
    }

    
    /**
     * Get the additional properties
     *
     * @return the additional properties
     */
    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    
    /**
     * Set the additional properties
     *
     * @param name the name
     * @param value the value
     */
    @JsonAnySetter
    public void setAdditionalProperty(String name, Object value) {
        this.additionalProperties.put(name, value);
    }


    /**
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {
        return Objects.hash(additionalProperties, id, versionEndExcluding, vulnerabilityIdMatched);
    }


    /**
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        
        if (obj == null) {
            return false;
        }
        
        if (getClass() != obj.getClass()) {
            return false;
        }
        
        Software other = (Software) obj;
        return Objects.equals(additionalProperties, other.additionalProperties) && Objects.equals(id, other.id)
                && Objects.equals(versionEndExcluding, other.versionEndExcluding)
                && Objects.equals(vulnerabilityIdMatched, other.vulnerabilityIdMatched);
    }


    /**
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return "Software [id=" + id + ", versionEndExcluding=" + versionEndExcluding + ", vulnerabilityIdMatched="
                + vulnerabilityIdMatched + ", additionalProperties=" + additionalProperties + "]";
    }

}
